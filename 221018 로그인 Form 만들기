<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<!-- *************************************** -->
<!-- JQuery 라이브러리 수입하기 -->
<!-- *************************************** -->
<script src = "/js/jquery-1.11.0.min.js"></script>
<script>

//***********************************************
// body 태그 안의 모든 HTML(내용) 을 읽어들인 이후 호출할 자스 코딩 설정하기.
//***********************************************
 $( function(){						/// body 태그를 모두 읽어들인 후 실행할 자스 코딩.
	 
	 //-----------------------------------------------------
	 // class= login_Btn을 가진 태그의 click 이벤트 발생 시 
	 // checkLoginForm() 호출하기
	 //-----------------------------------------------------
	$(".login_Btn").bind( "click", function(){		/// bind를 사용해서 2개의 인자값(이벤트명, 익명함수) -> 이벤트명에 맞게 익명함수를 실행시킴.
		
		checkLoginForm();
	})
 })


 
//***********************************************
// 입력한 아이디와 암호의 유효성 체크하는 checkLoginForm() 선언하기
//***********************************************
 function checkLoginForm(){
	 //==============================
	 // 아이디 유효성 체크
	 //==============================
		 //-----------------------------------------------------
		 // name='mid' 를 가진 태그를 관리하는 
		 // JQuery 객체 메위주 얻어서 변수 midObj 에 저장하기
		 //-----------------------------------------------------
	  	var midObj = $("[name='mid']");
	 
		 //-----------------------------------------------------
		 // 화면에서 입력한 아이디 가져와서 변수 midVal 에 저장하기
		 //-----------------------------------------------------	
	 	var midVal = $("[name='mid']").val();
		 
		 //-----------------------------------------------------
		 // 만약 가져온 아이디가 문자가 아니면 ""를 변수 midVal 에 저장하기
		 // +) 아이디가 길이가 없거나 공백으로만 이루어져 있으면 
		 //-----------------------------------------------------	
		 if( typeof(midVal)!="string" ){ midVal="";}			/// 문자형이 아닌 경우에는 무조건 길이가 없는 문자데이터 리턴하기.
		 if( midVal.split(" ").join("")=="" ){						/// 위에서 문자타입만 들어옴 + 공백이 아닌 경우
			 alert("아이디를 입력해 주십시오!");
		 	
		 	// 아이디 입력 란에 "" 삽입. 즉 아이디 입력란을 비우라는 뜻
			 midObj.val("");
			// 아이디 입력 란에 커서 넣기
			 midObj.focus();
			// 함수 중단
			 return;
		 }

	 //==============================
	 // 암호 유효성 체크
	 //==============================
		 //-----------------------------------------------------
		 // name='pwd' 를 가진 태그를 관리하는 
		 // JQuery 객체 메위주 얻어서 변수 pwdObj 에 저장하기
		 //-----------------------------------------------------
	 	var pwdObj = $("[name='pwd']");
		 //-----------------------------------------------------
		 // 화면에서 입력한 암호 가져와서 변수 pwdVal 에 저장하기
		 //-----------------------------------------------------
	 	var pwdVal = $("[name='pwd']").val();
	 	
		 //-----------------------------------------------------
		 // 만약 가져온 암호가 문자가 아니면 ""를 변수 midVal 에 저장하기
		 // +) 암호가 길이가 없거나 공백으로만 이루어져 있으면 
		 //-----------------------------------------------------
		 if( typeof(pwdVal)!="string" ){ pwdVal="";}			/// 문자형이 아닌 경우에는 무조건 길이가 없는 문자데이터 리턴하기.
		 if( pwdVal.split(" ").join("")=="" ){					/// 위에서 문자타입만 들어옴 + 공백이 아닌 경우
		 
			 alert("암호를 입력해 주십시오!")
			// 암호 입력 란에 "" 삽입. 즉 암호 입력란을 비우라는 뜻
			 pwdObj.val("");
			// 암호 입력 란에 커서 넣기
			 pwdObj.focus();
			// 함수 중단
			 return;
		 }
	
	
		 //==============================
		 // 현재 화면에서 페이지 이동 없이 (= 비동기 방식으로)
		 // 서버 쪽에 접속하여 아이디, 암호의 존재 개수를 얻고
		 // "로그인 성공" 또는 "로그인 실패" 경고하기
		 // 웹서버쪽에 접속할 때 사용할 URL 주소는 /loginProc.do				/// URL 주소 = 웹서버로 내리는 DB 연동 명령어 (어떤 작업을 실행할지, 그 주소를 가져오라는)
		 //==============================		  
		 
			 $.ajax({
						 //-----------------------------------------------------
						 // 웹서버에 접속할 때 사용할 URL 주소 지정.
						 //-----------------------------------------------------
				 		url:"/loginProc.do"			/// object 객체를 안에 넣음. 그리고 object 객체의 속성변수 url.
				 		
						//-----------------------------------------------------
						// 웹서버에 전송할 데이터를 보내는 방법 지정.			/// get/post 방식 중 하나를 골라서 사용.
						// 즉, 파라미터명(입력양식name 값)과 파라미터 값(입력양식value 값)을 보내는 방법 지정.
					    //-----------------------------------------------------				 		
				 		, type:"post"
				 		
						//-----------------------------------------------------
						// 웹서버에 전송할 파라미터명(입력양식name 값)과 파라미터 값(입력양식value 값)을 아래와 같은 형식의 문자열로 조합 & 설정하기.
						// " 파라미터명1=파라미터값1 & 파라미터명2=파라미터값2 &~ "
					    //-----------------------------------------------------		
				 		, data:$("[name='loginForm']").serialize()					 /// 1. ★★★  loginForm 를 관리하는 JQuery 객체의 메위주를 생성 -> serialize 메소드 사용. 
				 		
				 				// data: "mid=" +midVal+ "&pwd=" + pwdVal        /// 2. 파라미터명 = 파라미터값에서 파라미터명을 직접 
				 				// data: {"mid" :midVal, "pwd":pwdVal }			     /// 3. JSON 형태로 데이터 보내기  (나중엔 입력도 비동기 방식으로 하게되기 때문에 다량의 데이터를 보낼 땐 좀 힘들. )
				 	
				 		//-----------------------------------------------------
						// 웹서버와 통신한 후 웹서버의 응답을 성공적으로 받았을 경우 실행할 익명함수 설정.
					    //-----------------------------------------------------			
					 	, success:function( idCnt ){			/// idCnt 아이디암호의 존재개수가 매개변수로 들어옴. 웹서버가 
							if(idCnt ==1){
								alert("로그인 성공!");
								//location.replace("/boardList.do")   
							}
							else{
								alert("로그인 실패! 아이디 또는 암호가 틀립니다. 재입력 해주십시오!")
								midObj.val("");
								pwdObj.val("");
							}
					 	}
				 		//-----------------------------------------------------
						// 웹서버와 통신이 실패했을 경우 실행할 익명함수 설정.
					    //-----------------------------------------------------			
					 	, error: function( ){
							alert("웹서버 접속 실패");
					 	}
					 
					 }); // 비동기방식으로 웹서버와 통신할 때 사용하는 >>>JQuery 객체의 메소드<<<
			 
			 
			 
			 
 
 }
